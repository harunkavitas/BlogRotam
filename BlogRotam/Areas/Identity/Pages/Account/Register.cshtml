@page
@model RegisterModel
@using BlogRotam.Models
@{
    ViewData["Title"] = "Register";
}



<div class="row">
    <div class="col-md-4">

    </div>
    <div class="col-md-4">
        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2 style="text-align:center; color:red">New Account</h2>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                
                <input asp-for="Input.Name" class="form-control" placeholder="Name" />
                <span asp-validation-for="Input.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                
                <input asp-for="Input.Surname" class="form-control" placeholder="Surname" />
                <span asp-validation-for="Input.Surname" class="text-danger"></span>
            </div>
            <div class="form-group">
                
                <input asp-for="Input.Phone" class="form-control" placeholder="Phone" />
                <span asp-validation-for="Input.Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                
                <input asp-for="Input.Email" class="form-control" placeholder="Email"/>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                
                <input asp-for="Input.Password" class="form-control" placeholder="Password" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                
                <input asp-for="Input.ConfirmPassword" class="form-control" placeholder="Password Again"/>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            @if (User.IsInRole(Other.Role_Admin))
            {
                <div class="form-group">
                    @Html.DropDownListFor(m => m.Input.Role, Model.Input.RoleList, "Role", new { @class = "form-control" })
                </div>
            }
            <button type="submit" class="btn btn-success form-control" ><i class="fa fa-user-o" aria-hidden="true"></i> Register</button>
        </form>
        <section>
            
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                        <div>
                            <p>
                                There are no external authentication services configured.
                                for details on setting up this ASP.NET application to support logging in via external services.
                            </p>
                        </div>
                }
                else
                {
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                            <div>
                                <p>
                                    @foreach (var provider in Model.ExternalLogins)
                                {
                                        <button type="submit" class="btn btn-outline-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                                </p>
                            </div>
                        </form>
                }
            }
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
